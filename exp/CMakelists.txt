cmake_minimum_required(VERSION 3.15)

project(psa_crypto)

set(__build_dir ${CMAKE_CURRENT_BINARY_DIR}/psa_crypto)
set(PROJECT_BINARY_DIR ${__build_dir})

set(PSA_CRYPTO_BASE ${CMAKE_SOURCE_DIR})
set(ENV{PSA_CRYPTO_BASE} ${PSA_CRYPTO_BASE})
file(TO_CMAKE_PATH "$ENV{PSA_CRYPTO_BASE}" PROJECT_SOURCE_DIR)
set(PSA_CRYPTO_BINARY_DIR ${PROJECT_BINARY_DIR})
set(PSA_CRYPTO_BASE ${PROJECT_SOURCE_DIR})
set(ENV{PSA_CRYPTO_BASE} ${PSA_CRYPTO_BASE})

include(CheckCCompilerFlag)
include(CheckCXXCompilerFlag)
set(CMAKE_C_COMPILER_FORCED   1)
set(CMAKE_CXX_COMPILER_FORCED 1)

add_library(psa_crypto)

target_include_directories(psa_crypto PUBLIC ${PROJECT_SOURCE_DIR}/include)
target_include_directories(psa_crypto PUBLIC ${PROJECT_SOURCE_DIR}/alt)
target_include_directories(psa_crypto PUBLIC ${PROJECT_BINARY_DIR}/kconfig/include/generated)

target_sources(psa_crypto PRIVATE
    src/aead.c
    src/asymmetric.c
    src/cipher.c
    src/derivation.c
    src/generate.c
    src/hash.c
    src/init.c
    src/keys.c
    src/mac.c)

include(${PSA_CRYPTO_BASE}/cmake/extensions.cmake)
include(${PSA_CRYPTO_BASE}/cmake/kconfig.cmake)

add_subdirectory_ifdef(CONFIG_ARM_MBEDTLS ${CMAKE_SOURCE_DIR}/alt/arm/mbedtls)
add_subdirectory_ifdef(CONFIG_INTEL_TINYCRYPT ${CMAKE_SOURCE_DIR}/alt/intel/tinycrypt)
add_subdirectory_ifdef(CONFIG_VENDOR_ACCEL ${CMAKE_SOURCE_DIR}/alt/vendor/accel)

add_executable(sha2sum main/sha2sum.c)
target_link_libraries(sha2sum psa_crypto)
